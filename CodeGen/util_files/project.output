Terminals unused in grammar

    POW_OP
    TRUE
    FALSE


State 25 conflicts: 1 shift/reduce
State 47 conflicts: 1 shift/reduce
State 69 conflicts: 2 shift/reduce
State 74 conflicts: 1 shift/reduce
State 77 conflicts: 1 shift/reduce
State 124 conflicts: 2 shift/reduce
State 125 conflicts: 2 shift/reduce
State 126 conflicts: 2 shift/reduce
State 127 conflicts: 2 shift/reduce
State 192 conflicts: 1 shift/reduce


Grammar

    0 $accept: translation_unit $end

    1 $@1: %empty

    2 translation_unit: $@1 external_declaration
    3                 | translation_unit external_declaration

    4 external_declaration: mulendoflines
    5                     | function_definition
    6                     | declaration

    7 $@2: %empty

    8 $@3: %empty

    9 function_definition: IDENTIFIER $@2 parameter_list ARROW error_fun type_specifier $@3 EOL compound_statement

   10 error_fun: %empty
   11          | error

   12 parameter_list: %empty
   13               | ':' parameters

   14 parameters: type_specifier IDENTIFIER
   15           | parameters ',' type_specifier IDENTIFIER

   16 type_specifier: VOID
   17               | BOOL
   18               | STRING
   19               | INT
   20               | LONG
   21               | DOUBLE
   22               | FRAC
   23               | POINT
   24               | PARABOLA
   25               | ELLIPSE
   26               | HYPERBOLA
   27               | CIRCLE
   28               | CONIC
   29               | LINE
   30               | LINE_PAIR

   31 in_out_specifier: INPUT
   32                 | OUTPUT

   33 compound_statement: FUN_ST FUN_EN
   34                   | FUN_ST temp_fun statement_list FUN_EN

   35 temp_fun: %empty

   36 expression_statement: EOL
   37                     | expression EOL

   38 expression: assignment_expression
   39           | expression ',' assignment_expression

   40 assignment_expression: conditional_expression
   41                      | unary_expression assignment_operator assignment_expression

   42 assignment_operator: '='
   43                    | MUL_ASSIGN
   44                    | ADD_ASSIGN

   45 conditional_expression: logical_or_expression

   46 logical_or_expression: logical_and_expression
   47                      | logical_or_expression OR_OP logical_and_expression

   48 logical_and_expression: equality_expression
   49                       | logical_and_expression AND_OP equality_expression

   50 equality_expression: relational_expression
   51                    | equality_expression EQ_OP relational_expression
   52                    | equality_expression NE_OP relational_expression

   53 relational_expression: additive_expression
   54                      | relational_expression '<' additive_expression
   55                      | relational_expression '>' additive_expression
   56                      | relational_expression LE_OP additive_expression
   57                      | relational_expression GE_OP additive_expression

   58 additive_expression: multiplicative_expression
   59                    | additive_expression '+' multiplicative_expression
   60                    | additive_expression '-' multiplicative_expression

   61 multiplicative_expression: cast_expression
   62                          | multiplicative_expression '*' cast_expression
   63                          | multiplicative_expression '/' cast_expression
   64                          | multiplicative_expression '%' cast_expression

   65 cast_expression: unary_expression
   66                | '(' type_specifier ')' cast_expression

   67 unary_expression: postfix_expression
   68                 | unary_operator cast_expression

   69 unary_operator: '+'
   70               | '-'
   71               | '!'

   72 postfix_expression: primary_expression
   73                   | postfix_expression '(' ')'
   74                   | postfix_expression '(' argument_expression_list ')'

   75 primary_expression: IDENTIFIER
   76                   | INT_CONST
   77                   | FRAC_CONST
   78                   | DOUBLE_CONST
   79                   | STRING_LITERAL
   80                   | '(' expression ')'

   81 argument_expression_list: assignment_expression
   82                         | argument_expression_list ',' assignment_expression

   83 statement_list: statement
   84               | statement_list statement

   85 statement: declaration
   86          | compound_statement
   87          | expression_statement
   88          | selection_statement
   89          | iteration_statement
   90          | jump_statement
   91          | in_out_statement

   92 declaration: type_specifier init_declarator_list EOL
   93            | type_specifier mulendoflines init_declarator_list EOL

   94 mulendoflines: EOL
   95              | mulendoflines EOL

   96 init_declarator_list: init_declarator
   97                     | init_declarator_list ',' init_declarator

   98 init_declarator: declarator
   99                | declarator '=' initializer
  100                | declarator ':' initializer_list

  101 initializer_list: initializer
  102                 | initializer_list ',' initializer

  103 declarator: direct_declarator

  104 $@4: %empty

  105 direct_declarator: IDENTIFIER $@4

  106 $@5: %empty

  107 direct_declarator: type_specifier $@5
  108                  | '(' declarator ')'
  109                  | direct_declarator '(' parameter_list ')'
  110                  | direct_declarator '(' identifier_list ')'
  111                  | direct_declarator '(' ')'

  112 $@6: %empty

  113 identifier_list: IDENTIFIER $@6

  114 $@7: %empty

  115 identifier_list: identifier_list ',' IDENTIFIER $@7

  116 initializer: assignment_expression

  117 selection_statement: IF '(' expression ')' EOL compound_statement EOL ELSE EOL compound_statement
  118                    | IF '(' expression ')' EOL compound_statement

  119 iteration_statement: LOOP '(' expression ')' EOL compound_statement

  120 jump_statement: CONTINUE EOL
  121               | BREAK EOL
  122               | EXIT exit

  123 exit: EOL
  124     | ':' expression EOL

  125 $@8: %empty

  126 in_out_statement: in_out_specifier $@8 ':' initializer_list


Terminals, with rules where they appear

    $end (0) 0
    '!' <obj> (33) 71
    '%' (37) 64
    '(' (40) 66 73 74 80 108 109 110 111 117 118 119
    ')' (41) 66 73 74 80 108 109 110 111 117 118 119
    '*' (42) 62
    '+' <obj> (43) 59 69
    ',' (44) 15 39 82 97 102 115
    '-' <obj> (45) 60 70
    '/' (47) 63
    ':' (58) 13 100 124 126
    '<' (60) 54
    '=' <obj> (61) 42 99
    '>' (62) 55
    error (256) 11
    IDENTIFIER <obj> (258) 9 14 15 75 105 113 115
    STRING_LITERAL <obj> (259) 79
    FRAC_CONST <obj> (260) 77
    DOUBLE_CONST <obj> (261) 78
    INT_CONST <obj> (262) 76
    ARROW <obj> (263) 9
    LE_OP <obj> (264) 56
    GE_OP <obj> (265) 57
    EQ_OP <obj> (266) 51
    NE_OP <obj> (267) 52
    POW_OP <obj> (268)
    AND_OP <obj> (269) 49
    OR_OP <obj> (270) 47
    MUL_ASSIGN <obj> (271) 43
    ADD_ASSIGN <obj> (272) 44
    FUN_ST <obj> (273) 33 34
    FUN_EN <obj> (274) 33 34
    STRING <obj> (275) 18
    INT <obj> (276) 19
    LONG <obj> (277) 20
    BOOL <obj> (278) 17
    FRAC <obj> (279) 22
    DOUBLE <obj> (280) 21
    VOID <obj> (281) 16
    EOL <obj> (282) 9 36 37 92 93 94 95 117 118 119 120 121 123 124
    TRUE <obj> (283)
    FALSE <obj> (284)
    INPUT <obj> (285) 31
    OUTPUT <obj> (286) 32
    IF <obj> (287) 117 118
    ELSE <obj> (288) 117
    LOOP <obj> (289) 119
    CONTINUE <obj> (290) 120
    BREAK <obj> (291) 121
    EXIT <obj> (292) 122
    POINT <obj> (293) 23
    LINE <obj> (294) 29
    CONIC <obj> (295) 28
    LINE_PAIR <obj> (296) 30
    CIRCLE <obj> (297) 27
    PARABOLA <obj> (298) 24
    ELLIPSE <obj> (299) 25
    HYPERBOLA <obj> (300) 26


Nonterminals, with rules where they appear

    $accept (59)
        on left: 0
    translation_unit <obj> (60)
        on left: 2 3
        on right: 0 3
    $@1 (61)
        on left: 1
        on right: 2
    external_declaration <obj> (62)
        on left: 4 5 6
        on right: 2 3
    function_definition <obj> (63)
        on left: 9
        on right: 5
    $@2 (64)
        on left: 7
        on right: 9
    $@3 (65)
        on left: 8
        on right: 9
    error_fun (66)
        on left: 10 11
        on right: 9
    parameter_list <obj> (67)
        on left: 12 13
        on right: 9 109
    parameters <obj> (68)
        on left: 14 15
        on right: 13 15
    type_specifier <obj> (69)
        on left: 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30
        on right: 9 14 15 66 92 93 107
    in_out_specifier <obj> (70)
        on left: 31 32
        on right: 126
    compound_statement <obj> (71)
        on left: 33 34
        on right: 9 86 117 118 119
    temp_fun <obj> (72)
        on left: 35
        on right: 34
    expression_statement <obj> (73)
        on left: 36 37
        on right: 87
    expression <obj> (74)
        on left: 38 39
        on right: 37 39 80 117 118 119 124
    assignment_expression <obj> (75)
        on left: 40 41
        on right: 38 39 41 81 82 116
    assignment_operator <obj> (76)
        on left: 42 43 44
        on right: 41
    conditional_expression <obj> (77)
        on left: 45
        on right: 40
    logical_or_expression <obj> (78)
        on left: 46 47
        on right: 45 47
    logical_and_expression <obj> (79)
        on left: 48 49
        on right: 46 47 49
    equality_expression <obj> (80)
        on left: 50 51 52
        on right: 48 49 51 52
    relational_expression <obj> (81)
        on left: 53 54 55 56 57
        on right: 50 51 52 54 55 56 57
    additive_expression <obj> (82)
        on left: 58 59 60
        on right: 53 54 55 56 57 59 60
    multiplicative_expression <obj> (83)
        on left: 61 62 63 64
        on right: 58 59 60 62 63 64
    cast_expression <obj> (84)
        on left: 65 66
        on right: 61 62 63 64 66 68
    unary_expression <obj> (85)
        on left: 67 68
        on right: 41 65
    unary_operator <obj> (86)
        on left: 69 70 71
        on right: 68
    postfix_expression <obj> (87)
        on left: 72 73 74
        on right: 67 73 74
    primary_expression <obj> (88)
        on left: 75 76 77 78 79 80
        on right: 72
    argument_expression_list <obj> (89)
        on left: 81 82
        on right: 74 82
    statement_list <obj> (90)
        on left: 83 84
        on right: 34 84
    statement <obj> (91)
        on left: 85 86 87 88 89 90 91
        on right: 83 84
    declaration <obj> (92)
        on left: 92 93
        on right: 6 85
    mulendoflines <obj> (93)
        on left: 94 95
        on right: 4 93 95
    init_declarator_list <obj> (94)
        on left: 96 97
        on right: 92 93 97
    init_declarator <obj> (95)
        on left: 98 99 100
        on right: 96 97
    initializer_list <obj> (96)
        on left: 101 102
        on right: 100 102 126
    declarator <obj> (97)
        on left: 103
        on right: 98 99 100 108
    direct_declarator <obj> (98)
        on left: 105 107 108 109 110 111
        on right: 103 109 110 111
    $@4 (99)
        on left: 104
        on right: 105
    $@5 (100)
        on left: 106
        on right: 107
    identifier_list <obj> (101)
        on left: 113 115
        on right: 110 115
    $@6 (102)
        on left: 112
        on right: 113
    $@7 (103)
        on left: 114
        on right: 115
    initializer <obj> (104)
        on left: 116
        on right: 99 101 102
    selection_statement <obj> (105)
        on left: 117 118
        on right: 88
    iteration_statement <obj> (106)
        on left: 119
        on right: 89
    jump_statement <obj> (107)
        on left: 120 121 122
        on right: 90
    exit <obj> (108)
        on left: 123 124
        on right: 122
    in_out_statement <obj> (109)
        on left: 126
        on right: 91
    $@8 (110)
        on left: 125
        on right: 126


State 0

    0 $accept: . translation_unit $end

    $default  reduce using rule 1 ($@1)

    translation_unit  go to state 1
    $@1               go to state 2


State 1

    0 $accept: translation_unit . $end
    3 translation_unit: translation_unit . external_declaration

    $end        shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    STRING      shift, and go to state 5
    INT         shift, and go to state 6
    LONG        shift, and go to state 7
    BOOL        shift, and go to state 8
    FRAC        shift, and go to state 9
    DOUBLE      shift, and go to state 10
    VOID        shift, and go to state 11
    EOL         shift, and go to state 12
    POINT       shift, and go to state 13
    LINE        shift, and go to state 14
    CONIC       shift, and go to state 15
    LINE_PAIR   shift, and go to state 16
    CIRCLE      shift, and go to state 17
    PARABOLA    shift, and go to state 18
    ELLIPSE     shift, and go to state 19
    HYPERBOLA   shift, and go to state 20

    external_declaration  go to state 21
    function_definition   go to state 22
    type_specifier        go to state 23
    declaration           go to state 24
    mulendoflines         go to state 25


State 2

    2 translation_unit: $@1 . external_declaration

    IDENTIFIER  shift, and go to state 4
    STRING      shift, and go to state 5
    INT         shift, and go to state 6
    LONG        shift, and go to state 7
    BOOL        shift, and go to state 8
    FRAC        shift, and go to state 9
    DOUBLE      shift, and go to state 10
    VOID        shift, and go to state 11
    EOL         shift, and go to state 12
    POINT       shift, and go to state 13
    LINE        shift, and go to state 14
    CONIC       shift, and go to state 15
    LINE_PAIR   shift, and go to state 16
    CIRCLE      shift, and go to state 17
    PARABOLA    shift, and go to state 18
    ELLIPSE     shift, and go to state 19
    HYPERBOLA   shift, and go to state 20

    external_declaration  go to state 26
    function_definition   go to state 22
    type_specifier        go to state 23
    declaration           go to state 24
    mulendoflines         go to state 25


State 3

    0 $accept: translation_unit $end .

    $default  accept


State 4

    9 function_definition: IDENTIFIER . $@2 parameter_list ARROW error_fun type_specifier $@3 EOL compound_statement

    $default  reduce using rule 7 ($@2)

    $@2  go to state 27


State 5

   18 type_specifier: STRING .

    $default  reduce using rule 18 (type_specifier)


State 6

   19 type_specifier: INT .

    $default  reduce using rule 19 (type_specifier)


State 7

   20 type_specifier: LONG .

    $default  reduce using rule 20 (type_specifier)


State 8

   17 type_specifier: BOOL .

    $default  reduce using rule 17 (type_specifier)


State 9

   22 type_specifier: FRAC .

    $default  reduce using rule 22 (type_specifier)


State 10

   21 type_specifier: DOUBLE .

    $default  reduce using rule 21 (type_specifier)


State 11

   16 type_specifier: VOID .

    $default  reduce using rule 16 (type_specifier)


State 12

   94 mulendoflines: EOL .

    $default  reduce using rule 94 (mulendoflines)


State 13

   23 type_specifier: POINT .

    $default  reduce using rule 23 (type_specifier)


State 14

   29 type_specifier: LINE .

    $default  reduce using rule 29 (type_specifier)


State 15

   28 type_specifier: CONIC .

    $default  reduce using rule 28 (type_specifier)


State 16

   30 type_specifier: LINE_PAIR .

    $default  reduce using rule 30 (type_specifier)


State 17

   27 type_specifier: CIRCLE .

    $default  reduce using rule 27 (type_specifier)


State 18

   24 type_specifier: PARABOLA .

    $default  reduce using rule 24 (type_specifier)


State 19

   25 type_specifier: ELLIPSE .

    $default  reduce using rule 25 (type_specifier)


State 20

   26 type_specifier: HYPERBOLA .

    $default  reduce using rule 26 (type_specifier)


State 21

    3 translation_unit: translation_unit external_declaration .

    $default  reduce using rule 3 (translation_unit)


State 22

    5 external_declaration: function_definition .

    $default  reduce using rule 5 (external_declaration)


State 23

   92 declaration: type_specifier . init_declarator_list EOL
   93            | type_specifier . mulendoflines init_declarator_list EOL

    IDENTIFIER  shift, and go to state 28
    STRING      shift, and go to state 5
    INT         shift, and go to state 6
    LONG        shift, and go to state 7
    BOOL        shift, and go to state 8
    FRAC        shift, and go to state 9
    DOUBLE      shift, and go to state 10
    VOID        shift, and go to state 11
    EOL         shift, and go to state 12
    POINT       shift, and go to state 13
    LINE        shift, and go to state 14
    CONIC       shift, and go to state 15
    LINE_PAIR   shift, and go to state 16
    CIRCLE      shift, and go to state 17
    PARABOLA    shift, and go to state 18
    ELLIPSE     shift, and go to state 19
    HYPERBOLA   shift, and go to state 20
    '('         shift, and go to state 29

    type_specifier        go to state 30
    mulendoflines         go to state 31
    init_declarator_list  go to state 32
    init_declarator       go to state 33
    declarator            go to state 34
    direct_declarator     go to state 35


State 24

    6 external_declaration: declaration .

    $default  reduce using rule 6 (external_declaration)


State 25

    4 external_declaration: mulendoflines .
   95 mulendoflines: mulendoflines . EOL

    EOL  shift, and go to state 36

    EOL       [reduce using rule 4 (external_declaration)]
    $default  reduce using rule 4 (external_declaration)


State 26

    2 translation_unit: $@1 external_declaration .

    $default  reduce using rule 2 (translation_unit)


State 27

    9 function_definition: IDENTIFIER $@2 . parameter_list ARROW error_fun type_specifier $@3 EOL compound_statement

    ':'  shift, and go to state 37

    $default  reduce using rule 12 (parameter_list)

    parameter_list  go to state 38


State 28

  105 direct_declarator: IDENTIFIER . $@4

    $default  reduce using rule 104 ($@4)

    $@4  go to state 39


State 29

  108 direct_declarator: '(' . declarator ')'

    IDENTIFIER  shift, and go to state 28
    STRING      shift, and go to state 5
    INT         shift, and go to state 6
    LONG        shift, and go to state 7
    BOOL        shift, and go to state 8
    FRAC        shift, and go to state 9
    DOUBLE      shift, and go to state 10
    VOID        shift, and go to state 11
    POINT       shift, and go to state 13
    LINE        shift, and go to state 14
    CONIC       shift, and go to state 15
    LINE_PAIR   shift, and go to state 16
    CIRCLE      shift, and go to state 17
    PARABOLA    shift, and go to state 18
    ELLIPSE     shift, and go to state 19
    HYPERBOLA   shift, and go to state 20
    '('         shift, and go to state 29

    type_specifier     go to state 30
    declarator         go to state 40
    direct_declarator  go to state 35


State 30

  107 direct_declarator: type_specifier . $@5

    $default  reduce using rule 106 ($@5)

    $@5  go to state 41


State 31

   93 declaration: type_specifier mulendoflines . init_declarator_list EOL
   95 mulendoflines: mulendoflines . EOL

    IDENTIFIER  shift, and go to state 28
    STRING      shift, and go to state 5
    INT         shift, and go to state 6
    LONG        shift, and go to state 7
    BOOL        shift, and go to state 8
    FRAC        shift, and go to state 9
    DOUBLE      shift, and go to state 10
    VOID        shift, and go to state 11
    EOL         shift, and go to state 36
    POINT       shift, and go to state 13
    LINE        shift, and go to state 14
    CONIC       shift, and go to state 15
    LINE_PAIR   shift, and go to state 16
    CIRCLE      shift, and go to state 17
    PARABOLA    shift, and go to state 18
    ELLIPSE     shift, and go to state 19
    HYPERBOLA   shift, and go to state 20
    '('         shift, and go to state 29

    type_specifier        go to state 30
    init_declarator_list  go to state 42
    init_declarator       go to state 33
    declarator            go to state 34
    direct_declarator     go to state 35


State 32

   92 declaration: type_specifier init_declarator_list . EOL
   97 init_declarator_list: init_declarator_list . ',' init_declarator

    EOL  shift, and go to state 43
    ','  shift, and go to state 44


State 33

   96 init_declarator_list: init_declarator .

    $default  reduce using rule 96 (init_declarator_list)


State 34

   98 init_declarator: declarator .
   99                | declarator . '=' initializer
  100                | declarator . ':' initializer_list

    '='  shift, and go to state 45
    ':'  shift, and go to state 46

    $default  reduce using rule 98 (init_declarator)


State 35

  103 declarator: direct_declarator .
  109 direct_declarator: direct_declarator . '(' parameter_list ')'
  110                  | direct_declarator . '(' identifier_list ')'
  111                  | direct_declarator . '(' ')'

    '('  shift, and go to state 47

    $default  reduce using rule 103 (declarator)


State 36

   95 mulendoflines: mulendoflines EOL .

    $default  reduce using rule 95 (mulendoflines)


State 37

   13 parameter_list: ':' . parameters

    STRING     shift, and go to state 5
    INT        shift, and go to state 6
    LONG       shift, and go to state 7
    BOOL       shift, and go to state 8
    FRAC       shift, and go to state 9
    DOUBLE     shift, and go to state 10
    VOID       shift, and go to state 11
    POINT      shift, and go to state 13
    LINE       shift, and go to state 14
    CONIC      shift, and go to state 15
    LINE_PAIR  shift, and go to state 16
    CIRCLE     shift, and go to state 17
    PARABOLA   shift, and go to state 18
    ELLIPSE    shift, and go to state 19
    HYPERBOLA  shift, and go to state 20

    parameters      go to state 48
    type_specifier  go to state 49


State 38

    9 function_definition: IDENTIFIER $@2 parameter_list . ARROW error_fun type_specifier $@3 EOL compound_statement

    ARROW  shift, and go to state 50


State 39

  105 direct_declarator: IDENTIFIER $@4 .

    $default  reduce using rule 105 (direct_declarator)


State 40

  108 direct_declarator: '(' declarator . ')'

    ')'  shift, and go to state 51


State 41

  107 direct_declarator: type_specifier $@5 .

    $default  reduce using rule 107 (direct_declarator)


State 42

   93 declaration: type_specifier mulendoflines init_declarator_list . EOL
   97 init_declarator_list: init_declarator_list . ',' init_declarator

    EOL  shift, and go to state 52
    ','  shift, and go to state 44


State 43

   92 declaration: type_specifier init_declarator_list EOL .

    $default  reduce using rule 92 (declaration)


State 44

   97 init_declarator_list: init_declarator_list ',' . init_declarator

    IDENTIFIER  shift, and go to state 28
    STRING      shift, and go to state 5
    INT         shift, and go to state 6
    LONG        shift, and go to state 7
    BOOL        shift, and go to state 8
    FRAC        shift, and go to state 9
    DOUBLE      shift, and go to state 10
    VOID        shift, and go to state 11
    POINT       shift, and go to state 13
    LINE        shift, and go to state 14
    CONIC       shift, and go to state 15
    LINE_PAIR   shift, and go to state 16
    CIRCLE      shift, and go to state 17
    PARABOLA    shift, and go to state 18
    ELLIPSE     shift, and go to state 19
    HYPERBOLA   shift, and go to state 20
    '('         shift, and go to state 29

    type_specifier     go to state 30
    init_declarator    go to state 53
    declarator         go to state 34
    direct_declarator  go to state 35


State 45

   99 init_declarator: declarator '=' . initializer

    IDENTIFIER      shift, and go to state 54
    STRING_LITERAL  shift, and go to state 55
    FRAC_CONST      shift, and go to state 56
    DOUBLE_CONST    shift, and go to state 57
    INT_CONST       shift, and go to state 58
    '+'             shift, and go to state 59
    '-'             shift, and go to state 60
    '!'             shift, and go to state 61
    '('             shift, and go to state 62

    assignment_expression      go to state 63
    conditional_expression     go to state 64
    logical_or_expression      go to state 65
    logical_and_expression     go to state 66
    equality_expression        go to state 67
    relational_expression      go to state 68
    additive_expression        go to state 69
    multiplicative_expression  go to state 70
    cast_expression            go to state 71
    unary_expression           go to state 72
    unary_operator             go to state 73
    postfix_expression         go to state 74
    primary_expression         go to state 75
    initializer                go to state 76


State 46

  100 init_declarator: declarator ':' . initializer_list

    IDENTIFIER      shift, and go to state 54
    STRING_LITERAL  shift, and go to state 55
    FRAC_CONST      shift, and go to state 56
    DOUBLE_CONST    shift, and go to state 57
    INT_CONST       shift, and go to state 58
    '+'             shift, and go to state 59
    '-'             shift, and go to state 60
    '!'             shift, and go to state 61
    '('             shift, and go to state 62

    assignment_expression      go to state 63
    conditional_expression     go to state 64
    logical_or_expression      go to state 65
    logical_and_expression     go to state 66
    equality_expression        go to state 67
    relational_expression      go to state 68
    additive_expression        go to state 69
    multiplicative_expression  go to state 70
    cast_expression            go to state 71
    unary_expression           go to state 72
    unary_operator             go to state 73
    postfix_expression         go to state 74
    primary_expression         go to state 75
    initializer_list           go to state 77
    initializer                go to state 78


State 47

  109 direct_declarator: direct_declarator '(' . parameter_list ')'
  110                  | direct_declarator '(' . identifier_list ')'
  111                  | direct_declarator '(' . ')'

    IDENTIFIER  shift, and go to state 79
    ':'         shift, and go to state 37
    ')'         shift, and go to state 80

    ')'  [reduce using rule 12 (parameter_list)]

    parameter_list   go to state 81
    identifier_list  go to state 82


State 48

   13 parameter_list: ':' parameters .
   15 parameters: parameters . ',' type_specifier IDENTIFIER

    ','  shift, and go to state 83

    $default  reduce using rule 13 (parameter_list)


State 49

   14 parameters: type_specifier . IDENTIFIER

    IDENTIFIER  shift, and go to state 84


State 50

    9 function_definition: IDENTIFIER $@2 parameter_list ARROW . error_fun type_specifier $@3 EOL compound_statement

    error  shift, and go to state 85

    STRING     reduce using rule 10 (error_fun)
    INT        reduce using rule 10 (error_fun)
    LONG       reduce using rule 10 (error_fun)
    BOOL       reduce using rule 10 (error_fun)
    FRAC       reduce using rule 10 (error_fun)
    DOUBLE     reduce using rule 10 (error_fun)
    VOID       reduce using rule 10 (error_fun)
    POINT      reduce using rule 10 (error_fun)
    LINE       reduce using rule 10 (error_fun)
    CONIC      reduce using rule 10 (error_fun)
    LINE_PAIR  reduce using rule 10 (error_fun)
    CIRCLE     reduce using rule 10 (error_fun)
    PARABOLA   reduce using rule 10 (error_fun)
    ELLIPSE    reduce using rule 10 (error_fun)
    HYPERBOLA  reduce using rule 10 (error_fun)

    error_fun  go to state 86


State 51

  108 direct_declarator: '(' declarator ')' .

    $default  reduce using rule 108 (direct_declarator)


State 52

   93 declaration: type_specifier mulendoflines init_declarator_list EOL .

    $default  reduce using rule 93 (declaration)


State 53

   97 init_declarator_list: init_declarator_list ',' init_declarator .

    $default  reduce using rule 97 (init_declarator_list)


State 54

   75 primary_expression: IDENTIFIER .

    $default  reduce using rule 75 (primary_expression)


State 55

   79 primary_expression: STRING_LITERAL .

    $default  reduce using rule 79 (primary_expression)


State 56

   77 primary_expression: FRAC_CONST .

    $default  reduce using rule 77 (primary_expression)


State 57

   78 primary_expression: DOUBLE_CONST .

    $default  reduce using rule 78 (primary_expression)


State 58

   76 primary_expression: INT_CONST .

    $default  reduce using rule 76 (primary_expression)


State 59

   69 unary_operator: '+' .

    $default  reduce using rule 69 (unary_operator)


State 60

   70 unary_operator: '-' .

    $default  reduce using rule 70 (unary_operator)


State 61

   71 unary_operator: '!' .

    $default  reduce using rule 71 (unary_operator)


State 62

   66 cast_expression: '(' . type_specifier ')' cast_expression
   80 primary_expression: '(' . expression ')'

    IDENTIFIER      shift, and go to state 54
    STRING_LITERAL  shift, and go to state 55
    FRAC_CONST      shift, and go to state 56
    DOUBLE_CONST    shift, and go to state 57
    INT_CONST       shift, and go to state 58
    STRING          shift, and go to state 5
    INT             shift, and go to state 6
    LONG            shift, and go to state 7
    BOOL            shift, and go to state 8
    FRAC            shift, and go to state 9
    DOUBLE          shift, and go to state 10
    VOID            shift, and go to state 11
    POINT           shift, and go to state 13
    LINE            shift, and go to state 14
    CONIC           shift, and go to state 15
    LINE_PAIR       shift, and go to state 16
    CIRCLE          shift, and go to state 17
    PARABOLA        shift, and go to state 18
    ELLIPSE         shift, and go to state 19
    HYPERBOLA       shift, and go to state 20
    '+'             shift, and go to state 59
    '-'             shift, and go to state 60
    '!'             shift, and go to state 61
    '('             shift, and go to state 62

    type_specifier             go to state 87
    expression                 go to state 88
    assignment_expression      go to state 89
    conditional_expression     go to state 64
    logical_or_expression      go to state 65
    logical_and_expression     go to state 66
    equality_expression        go to state 67
    relational_expression      go to state 68
    additive_expression        go to state 69
    multiplicative_expression  go to state 70
    cast_expression            go to state 71
    unary_expression           go to state 72
    unary_operator             go to state 73
    postfix_expression         go to state 74
    primary_expression         go to state 75


State 63

  116 initializer: assignment_expression .

    $default  reduce using rule 116 (initializer)


State 64

   40 assignment_expression: conditional_expression .

    $default  reduce using rule 40 (assignment_expression)


State 65

   45 conditional_expression: logical_or_expression .
   47 logical_or_expression: logical_or_expression . OR_OP logical_and_expression

    OR_OP  shift, and go to state 90

    $default  reduce using rule 45 (conditional_expression)


State 66

   46 logical_or_expression: logical_and_expression .
   49 logical_and_expression: logical_and_expression . AND_OP equality_expression

    AND_OP  shift, and go to state 91

    $default  reduce using rule 46 (logical_or_expression)


State 67

   48 logical_and_expression: equality_expression .
   51 equality_expression: equality_expression . EQ_OP relational_expression
   52                    | equality_expression . NE_OP relational_expression

    EQ_OP  shift, and go to state 92
    NE_OP  shift, and go to state 93

    $default  reduce using rule 48 (logical_and_expression)


State 68

   50 equality_expression: relational_expression .
   54 relational_expression: relational_expression . '<' additive_expression
   55                      | relational_expression . '>' additive_expression
   56                      | relational_expression . LE_OP additive_expression
   57                      | relational_expression . GE_OP additive_expression

    LE_OP  shift, and go to state 94
    GE_OP  shift, and go to state 95
    '<'    shift, and go to state 96
    '>'    shift, and go to state 97

    $default  reduce using rule 50 (equality_expression)


State 69

   53 relational_expression: additive_expression .
   59 additive_expression: additive_expression . '+' multiplicative_expression
   60                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 98
    '-'  shift, and go to state 99

    '+'       [reduce using rule 53 (relational_expression)]
    '-'       [reduce using rule 53 (relational_expression)]
    $default  reduce using rule 53 (relational_expression)


State 70

   58 additive_expression: multiplicative_expression .
   62 multiplicative_expression: multiplicative_expression . '*' cast_expression
   63                          | multiplicative_expression . '/' cast_expression
   64                          | multiplicative_expression . '%' cast_expression

    '*'  shift, and go to state 100
    '/'  shift, and go to state 101
    '%'  shift, and go to state 102

    $default  reduce using rule 58 (additive_expression)


State 71

   61 multiplicative_expression: cast_expression .

    $default  reduce using rule 61 (multiplicative_expression)


State 72

   41 assignment_expression: unary_expression . assignment_operator assignment_expression
   65 cast_expression: unary_expression .

    MUL_ASSIGN  shift, and go to state 103
    ADD_ASSIGN  shift, and go to state 104
    '='         shift, and go to state 105

    $default  reduce using rule 65 (cast_expression)

    assignment_operator  go to state 106


State 73

   68 unary_expression: unary_operator . cast_expression

    IDENTIFIER      shift, and go to state 54
    STRING_LITERAL  shift, and go to state 55
    FRAC_CONST      shift, and go to state 56
    DOUBLE_CONST    shift, and go to state 57
    INT_CONST       shift, and go to state 58
    '+'             shift, and go to state 59
    '-'             shift, and go to state 60
    '!'             shift, and go to state 61
    '('             shift, and go to state 62

    cast_expression     go to state 107
    unary_expression    go to state 108
    unary_operator      go to state 73
    postfix_expression  go to state 74
    primary_expression  go to state 75


State 74

   67 unary_expression: postfix_expression .
   73 postfix_expression: postfix_expression . '(' ')'
   74                   | postfix_expression . '(' argument_expression_list ')'

    '('  shift, and go to state 109

    '('       [reduce using rule 67 (unary_expression)]
    $default  reduce using rule 67 (unary_expression)


State 75

   72 postfix_expression: primary_expression .

    $default  reduce using rule 72 (postfix_expression)


State 76

   99 init_declarator: declarator '=' initializer .

    $default  reduce using rule 99 (init_declarator)


State 77

  100 init_declarator: declarator ':' initializer_list .
  102 initializer_list: initializer_list . ',' initializer

    ','  shift, and go to state 110

    ','       [reduce using rule 100 (init_declarator)]
    $default  reduce using rule 100 (init_declarator)


State 78

  101 initializer_list: initializer .

    $default  reduce using rule 101 (initializer_list)


State 79

  113 identifier_list: IDENTIFIER . $@6

    $default  reduce using rule 112 ($@6)

    $@6  go to state 111


State 80

  111 direct_declarator: direct_declarator '(' ')' .

    $default  reduce using rule 111 (direct_declarator)


State 81

  109 direct_declarator: direct_declarator '(' parameter_list . ')'

    ')'  shift, and go to state 112


State 82

  110 direct_declarator: direct_declarator '(' identifier_list . ')'
  115 identifier_list: identifier_list . ',' IDENTIFIER $@7

    ','  shift, and go to state 113
    ')'  shift, and go to state 114


State 83

   15 parameters: parameters ',' . type_specifier IDENTIFIER

    STRING     shift, and go to state 5
    INT        shift, and go to state 6
    LONG       shift, and go to state 7
    BOOL       shift, and go to state 8
    FRAC       shift, and go to state 9
    DOUBLE     shift, and go to state 10
    VOID       shift, and go to state 11
    POINT      shift, and go to state 13
    LINE       shift, and go to state 14
    CONIC      shift, and go to state 15
    LINE_PAIR  shift, and go to state 16
    CIRCLE     shift, and go to state 17
    PARABOLA   shift, and go to state 18
    ELLIPSE    shift, and go to state 19
    HYPERBOLA  shift, and go to state 20

    type_specifier  go to state 115


State 84

   14 parameters: type_specifier IDENTIFIER .

    $default  reduce using rule 14 (parameters)


State 85

   11 error_fun: error .

    $default  reduce using rule 11 (error_fun)


State 86

    9 function_definition: IDENTIFIER $@2 parameter_list ARROW error_fun . type_specifier $@3 EOL compound_statement

    STRING     shift, and go to state 5
    INT        shift, and go to state 6
    LONG       shift, and go to state 7
    BOOL       shift, and go to state 8
    FRAC       shift, and go to state 9
    DOUBLE     shift, and go to state 10
    VOID       shift, and go to state 11
    POINT      shift, and go to state 13
    LINE       shift, and go to state 14
    CONIC      shift, and go to state 15
    LINE_PAIR  shift, and go to state 16
    CIRCLE     shift, and go to state 17
    PARABOLA   shift, and go to state 18
    ELLIPSE    shift, and go to state 19
    HYPERBOLA  shift, and go to state 20

    type_specifier  go to state 116


State 87

   66 cast_expression: '(' type_specifier . ')' cast_expression

    ')'  shift, and go to state 117


State 88

   39 expression: expression . ',' assignment_expression
   80 primary_expression: '(' expression . ')'

    ','  shift, and go to state 118
    ')'  shift, and go to state 119


State 89

   38 expression: assignment_expression .

    $default  reduce using rule 38 (expression)


State 90

   47 logical_or_expression: logical_or_expression OR_OP . logical_and_expression

    IDENTIFIER      shift, and go to state 54
    STRING_LITERAL  shift, and go to state 55
    FRAC_CONST      shift, and go to state 56
    DOUBLE_CONST    shift, and go to state 57
    INT_CONST       shift, and go to state 58
    '+'             shift, and go to state 59
    '-'             shift, and go to state 60
    '!'             shift, and go to state 61
    '('             shift, and go to state 62

    logical_and_expression     go to state 120
    equality_expression        go to state 67
    relational_expression      go to state 68
    additive_expression        go to state 69
    multiplicative_expression  go to state 70
    cast_expression            go to state 71
    unary_expression           go to state 108
    unary_operator             go to state 73
    postfix_expression         go to state 74
    primary_expression         go to state 75


State 91

   49 logical_and_expression: logical_and_expression AND_OP . equality_expression

    IDENTIFIER      shift, and go to state 54
    STRING_LITERAL  shift, and go to state 55
    FRAC_CONST      shift, and go to state 56
    DOUBLE_CONST    shift, and go to state 57
    INT_CONST       shift, and go to state 58
    '+'             shift, and go to state 59
    '-'             shift, and go to state 60
    '!'             shift, and go to state 61
    '('             shift, and go to state 62

    equality_expression        go to state 121
    relational_expression      go to state 68
    additive_expression        go to state 69
    multiplicative_expression  go to state 70
    cast_expression            go to state 71
    unary_expression           go to state 108
    unary_operator             go to state 73
    postfix_expression         go to state 74
    primary_expression         go to state 75


State 92

   51 equality_expression: equality_expression EQ_OP . relational_expression

    IDENTIFIER      shift, and go to state 54
    STRING_LITERAL  shift, and go to state 55
    FRAC_CONST      shift, and go to state 56
    DOUBLE_CONST    shift, and go to state 57
    INT_CONST       shift, and go to state 58
    '+'             shift, and go to state 59
    '-'             shift, and go to state 60
    '!'             shift, and go to state 61
    '('             shift, and go to state 62

    relational_expression      go to state 122
    additive_expression        go to state 69
    multiplicative_expression  go to state 70
    cast_expression            go to state 71
    unary_expression           go to state 108
    unary_operator             go to state 73
    postfix_expression         go to state 74
    primary_expression         go to state 75


State 93

   52 equality_expression: equality_expression NE_OP . relational_expression

    IDENTIFIER      shift, and go to state 54
    STRING_LITERAL  shift, and go to state 55
    FRAC_CONST      shift, and go to state 56
    DOUBLE_CONST    shift, and go to state 57
    INT_CONST       shift, and go to state 58
    '+'             shift, and go to state 59
    '-'             shift, and go to state 60
    '!'             shift, and go to state 61
    '('             shift, and go to state 62

    relational_expression      go to state 123
    additive_expression        go to state 69
    multiplicative_expression  go to state 70
    cast_expression            go to state 71
    unary_expression           go to state 108
    unary_operator             go to state 73
    postfix_expression         go to state 74
    primary_expression         go to state 75


State 94

   56 relational_expression: relational_expression LE_OP . additive_expression

    IDENTIFIER      shift, and go to state 54
    STRING_LITERAL  shift, and go to state 55
    FRAC_CONST      shift, and go to state 56
    DOUBLE_CONST    shift, and go to state 57
    INT_CONST       shift, and go to state 58
    '+'             shift, and go to state 59
    '-'             shift, and go to state 60
    '!'             shift, and go to state 61
    '('             shift, and go to state 62

    additive_expression        go to state 124
    multiplicative_expression  go to state 70
    cast_expression            go to state 71
    unary_expression           go to state 108
    unary_operator             go to state 73
    postfix_expression         go to state 74
    primary_expression         go to state 75


State 95

   57 relational_expression: relational_expression GE_OP . additive_expression

    IDENTIFIER      shift, and go to state 54
    STRING_LITERAL  shift, and go to state 55
    FRAC_CONST      shift, and go to state 56
    DOUBLE_CONST    shift, and go to state 57
    INT_CONST       shift, and go to state 58
    '+'             shift, and go to state 59
    '-'             shift, and go to state 60
    '!'             shift, and go to state 61
    '('             shift, and go to state 62

    additive_expression        go to state 125
    multiplicative_expression  go to state 70
    cast_expression            go to state 71
    unary_expression           go to state 108
    unary_operator             go to state 73
    postfix_expression         go to state 74
    primary_expression         go to state 75


State 96

   54 relational_expression: relational_expression '<' . additive_expression

    IDENTIFIER      shift, and go to state 54
    STRING_LITERAL  shift, and go to state 55
    FRAC_CONST      shift, and go to state 56
    DOUBLE_CONST    shift, and go to state 57
    INT_CONST       shift, and go to state 58
    '+'             shift, and go to state 59
    '-'             shift, and go to state 60
    '!'             shift, and go to state 61
    '('             shift, and go to state 62

    additive_expression        go to state 126
    multiplicative_expression  go to state 70
    cast_expression            go to state 71
    unary_expression           go to state 108
    unary_operator             go to state 73
    postfix_expression         go to state 74
    primary_expression         go to state 75


State 97

   55 relational_expression: relational_expression '>' . additive_expression

    IDENTIFIER      shift, and go to state 54
    STRING_LITERAL  shift, and go to state 55
    FRAC_CONST      shift, and go to state 56
    DOUBLE_CONST    shift, and go to state 57
    INT_CONST       shift, and go to state 58
    '+'             shift, and go to state 59
    '-'             shift, and go to state 60
    '!'             shift, and go to state 61
    '('             shift, and go to state 62

    additive_expression        go to state 127
    multiplicative_expression  go to state 70
    cast_expression            go to state 71
    unary_expression           go to state 108
    unary_operator             go to state 73
    postfix_expression         go to state 74
    primary_expression         go to state 75


State 98

   59 additive_expression: additive_expression '+' . multiplicative_expression

    IDENTIFIER      shift, and go to state 54
    STRING_LITERAL  shift, and go to state 55
    FRAC_CONST      shift, and go to state 56
    DOUBLE_CONST    shift, and go to state 57
    INT_CONST       shift, and go to state 58
    '+'             shift, and go to state 59
    '-'             shift, and go to state 60
    '!'             shift, and go to state 61
    '('             shift, and go to state 62

    multiplicative_expression  go to state 128
    cast_expression            go to state 71
    unary_expression           go to state 108
    unary_operator             go to state 73
    postfix_expression         go to state 74
    primary_expression         go to state 75


State 99

   60 additive_expression: additive_expression '-' . multiplicative_expression

    IDENTIFIER      shift, and go to state 54
    STRING_LITERAL  shift, and go to state 55
    FRAC_CONST      shift, and go to state 56
    DOUBLE_CONST    shift, and go to state 57
    INT_CONST       shift, and go to state 58
    '+'             shift, and go to state 59
    '-'             shift, and go to state 60
    '!'             shift, and go to state 61
    '('             shift, and go to state 62

    multiplicative_expression  go to state 129
    cast_expression            go to state 71
    unary_expression           go to state 108
    unary_operator             go to state 73
    postfix_expression         go to state 74
    primary_expression         go to state 75


State 100

   62 multiplicative_expression: multiplicative_expression '*' . cast_expression

    IDENTIFIER      shift, and go to state 54
    STRING_LITERAL  shift, and go to state 55
    FRAC_CONST      shift, and go to state 56
    DOUBLE_CONST    shift, and go to state 57
    INT_CONST       shift, and go to state 58
    '+'             shift, and go to state 59
    '-'             shift, and go to state 60
    '!'             shift, and go to state 61
    '('             shift, and go to state 62

    cast_expression     go to state 130
    unary_expression    go to state 108
    unary_operator      go to state 73
    postfix_expression  go to state 74
    primary_expression  go to state 75


State 101

   63 multiplicative_expression: multiplicative_expression '/' . cast_expression

    IDENTIFIER      shift, and go to state 54
    STRING_LITERAL  shift, and go to state 55
    FRAC_CONST      shift, and go to state 56
    DOUBLE_CONST    shift, and go to state 57
    INT_CONST       shift, and go to state 58
    '+'             shift, and go to state 59
    '-'             shift, and go to state 60
    '!'             shift, and go to state 61
    '('             shift, and go to state 62

    cast_expression     go to state 131
    unary_expression    go to state 108
    unary_operator      go to state 73
    postfix_expression  go to state 74
    primary_expression  go to state 75


State 102

   64 multiplicative_expression: multiplicative_expression '%' . cast_expression

    IDENTIFIER      shift, and go to state 54
    STRING_LITERAL  shift, and go to state 55
    FRAC_CONST      shift, and go to state 56
    DOUBLE_CONST    shift, and go to state 57
    INT_CONST       shift, and go to state 58
    '+'             shift, and go to state 59
    '-'             shift, and go to state 60
    '!'             shift, and go to state 61
    '('             shift, and go to state 62

    cast_expression     go to state 132
    unary_expression    go to state 108
    unary_operator      go to state 73
    postfix_expression  go to state 74
    primary_expression  go to state 75


State 103

   43 assignment_operator: MUL_ASSIGN .

    $default  reduce using rule 43 (assignment_operator)


State 104

   44 assignment_operator: ADD_ASSIGN .

    $default  reduce using rule 44 (assignment_operator)


State 105

   42 assignment_operator: '=' .

    $default  reduce using rule 42 (assignment_operator)


State 106

   41 assignment_expression: unary_expression assignment_operator . assignment_expression

    IDENTIFIER      shift, and go to state 54
    STRING_LITERAL  shift, and go to state 55
    FRAC_CONST      shift, and go to state 56
    DOUBLE_CONST    shift, and go to state 57
    INT_CONST       shift, and go to state 58
    '+'             shift, and go to state 59
    '-'             shift, and go to state 60
    '!'             shift, and go to state 61
    '('             shift, and go to state 62

    assignment_expression      go to state 133
    conditional_expression     go to state 64
    logical_or_expression      go to state 65
    logical_and_expression     go to state 66
    equality_expression        go to state 67
    relational_expression      go to state 68
    additive_expression        go to state 69
    multiplicative_expression  go to state 70
    cast_expression            go to state 71
    unary_expression           go to state 72
    unary_operator             go to state 73
    postfix_expression         go to state 74
    primary_expression         go to state 75


State 107

   68 unary_expression: unary_operator cast_expression .

    $default  reduce using rule 68 (unary_expression)


State 108

   65 cast_expression: unary_expression .

    $default  reduce using rule 65 (cast_expression)


State 109

   73 postfix_expression: postfix_expression '(' . ')'
   74                   | postfix_expression '(' . argument_expression_list ')'

    IDENTIFIER      shift, and go to state 54
    STRING_LITERAL  shift, and go to state 55
    FRAC_CONST      shift, and go to state 56
    DOUBLE_CONST    shift, and go to state 57
    INT_CONST       shift, and go to state 58
    '+'             shift, and go to state 59
    '-'             shift, and go to state 60
    '!'             shift, and go to state 61
    '('             shift, and go to state 62
    ')'             shift, and go to state 134

    assignment_expression      go to state 135
    conditional_expression     go to state 64
    logical_or_expression      go to state 65
    logical_and_expression     go to state 66
    equality_expression        go to state 67
    relational_expression      go to state 68
    additive_expression        go to state 69
    multiplicative_expression  go to state 70
    cast_expression            go to state 71
    unary_expression           go to state 72
    unary_operator             go to state 73
    postfix_expression         go to state 74
    primary_expression         go to state 75
    argument_expression_list   go to state 136


State 110

  102 initializer_list: initializer_list ',' . initializer

    IDENTIFIER      shift, and go to state 54
    STRING_LITERAL  shift, and go to state 55
    FRAC_CONST      shift, and go to state 56
    DOUBLE_CONST    shift, and go to state 57
    INT_CONST       shift, and go to state 58
    '+'             shift, and go to state 59
    '-'             shift, and go to state 60
    '!'             shift, and go to state 61
    '('             shift, and go to state 62

    assignment_expression      go to state 63
    conditional_expression     go to state 64
    logical_or_expression      go to state 65
    logical_and_expression     go to state 66
    equality_expression        go to state 67
    relational_expression      go to state 68
    additive_expression        go to state 69
    multiplicative_expression  go to state 70
    cast_expression            go to state 71
    unary_expression           go to state 72
    unary_operator             go to state 73
    postfix_expression         go to state 74
    primary_expression         go to state 75
    initializer                go to state 137


State 111

  113 identifier_list: IDENTIFIER $@6 .

    $default  reduce using rule 113 (identifier_list)


State 112

  109 direct_declarator: direct_declarator '(' parameter_list ')' .

    $default  reduce using rule 109 (direct_declarator)


State 113

  115 identifier_list: identifier_list ',' . IDENTIFIER $@7

    IDENTIFIER  shift, and go to state 138


State 114

  110 direct_declarator: direct_declarator '(' identifier_list ')' .

    $default  reduce using rule 110 (direct_declarator)


State 115

   15 parameters: parameters ',' type_specifier . IDENTIFIER

    IDENTIFIER  shift, and go to state 139


State 116

    9 function_definition: IDENTIFIER $@2 parameter_list ARROW error_fun type_specifier . $@3 EOL compound_statement

    $default  reduce using rule 8 ($@3)

    $@3  go to state 140


State 117

   66 cast_expression: '(' type_specifier ')' . cast_expression

    IDENTIFIER      shift, and go to state 54
    STRING_LITERAL  shift, and go to state 55
    FRAC_CONST      shift, and go to state 56
    DOUBLE_CONST    shift, and go to state 57
    INT_CONST       shift, and go to state 58
    '+'             shift, and go to state 59
    '-'             shift, and go to state 60
    '!'             shift, and go to state 61
    '('             shift, and go to state 62

    cast_expression     go to state 141
    unary_expression    go to state 108
    unary_operator      go to state 73
    postfix_expression  go to state 74
    primary_expression  go to state 75


State 118

   39 expression: expression ',' . assignment_expression

    IDENTIFIER      shift, and go to state 54
    STRING_LITERAL  shift, and go to state 55
    FRAC_CONST      shift, and go to state 56
    DOUBLE_CONST    shift, and go to state 57
    INT_CONST       shift, and go to state 58
    '+'             shift, and go to state 59
    '-'             shift, and go to state 60
    '!'             shift, and go to state 61
    '('             shift, and go to state 62

    assignment_expression      go to state 142
    conditional_expression     go to state 64
    logical_or_expression      go to state 65
    logical_and_expression     go to state 66
    equality_expression        go to state 67
    relational_expression      go to state 68
    additive_expression        go to state 69
    multiplicative_expression  go to state 70
    cast_expression            go to state 71
    unary_expression           go to state 72
    unary_operator             go to state 73
    postfix_expression         go to state 74
    primary_expression         go to state 75


State 119

   80 primary_expression: '(' expression ')' .

    $default  reduce using rule 80 (primary_expression)


State 120

   47 logical_or_expression: logical_or_expression OR_OP logical_and_expression .
   49 logical_and_expression: logical_and_expression . AND_OP equality_expression

    AND_OP  shift, and go to state 91

    $default  reduce using rule 47 (logical_or_expression)


State 121

   49 logical_and_expression: logical_and_expression AND_OP equality_expression .
   51 equality_expression: equality_expression . EQ_OP relational_expression
   52                    | equality_expression . NE_OP relational_expression

    EQ_OP  shift, and go to state 92
    NE_OP  shift, and go to state 93

    $default  reduce using rule 49 (logical_and_expression)


State 122

   51 equality_expression: equality_expression EQ_OP relational_expression .
   54 relational_expression: relational_expression . '<' additive_expression
   55                      | relational_expression . '>' additive_expression
   56                      | relational_expression . LE_OP additive_expression
   57                      | relational_expression . GE_OP additive_expression

    LE_OP  shift, and go to state 94
    GE_OP  shift, and go to state 95
    '<'    shift, and go to state 96
    '>'    shift, and go to state 97

    $default  reduce using rule 51 (equality_expression)


State 123

   52 equality_expression: equality_expression NE_OP relational_expression .
   54 relational_expression: relational_expression . '<' additive_expression
   55                      | relational_expression . '>' additive_expression
   56                      | relational_expression . LE_OP additive_expression
   57                      | relational_expression . GE_OP additive_expression

    LE_OP  shift, and go to state 94
    GE_OP  shift, and go to state 95
    '<'    shift, and go to state 96
    '>'    shift, and go to state 97

    $default  reduce using rule 52 (equality_expression)


State 124

   56 relational_expression: relational_expression LE_OP additive_expression .
   59 additive_expression: additive_expression . '+' multiplicative_expression
   60                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 98
    '-'  shift, and go to state 99

    '+'       [reduce using rule 56 (relational_expression)]
    '-'       [reduce using rule 56 (relational_expression)]
    $default  reduce using rule 56 (relational_expression)


State 125

   57 relational_expression: relational_expression GE_OP additive_expression .
   59 additive_expression: additive_expression . '+' multiplicative_expression
   60                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 98
    '-'  shift, and go to state 99

    '+'       [reduce using rule 57 (relational_expression)]
    '-'       [reduce using rule 57 (relational_expression)]
    $default  reduce using rule 57 (relational_expression)


State 126

   54 relational_expression: relational_expression '<' additive_expression .
   59 additive_expression: additive_expression . '+' multiplicative_expression
   60                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 98
    '-'  shift, and go to state 99

    '+'       [reduce using rule 54 (relational_expression)]
    '-'       [reduce using rule 54 (relational_expression)]
    $default  reduce using rule 54 (relational_expression)


State 127

   55 relational_expression: relational_expression '>' additive_expression .
   59 additive_expression: additive_expression . '+' multiplicative_expression
   60                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 98
    '-'  shift, and go to state 99

    '+'       [reduce using rule 55 (relational_expression)]
    '-'       [reduce using rule 55 (relational_expression)]
    $default  reduce using rule 55 (relational_expression)


State 128

   59 additive_expression: additive_expression '+' multiplicative_expression .
   62 multiplicative_expression: multiplicative_expression . '*' cast_expression
   63                          | multiplicative_expression . '/' cast_expression
   64                          | multiplicative_expression . '%' cast_expression

    '*'  shift, and go to state 100
    '/'  shift, and go to state 101
    '%'  shift, and go to state 102

    $default  reduce using rule 59 (additive_expression)


State 129

   60 additive_expression: additive_expression '-' multiplicative_expression .
   62 multiplicative_expression: multiplicative_expression . '*' cast_expression
   63                          | multiplicative_expression . '/' cast_expression
   64                          | multiplicative_expression . '%' cast_expression

    '*'  shift, and go to state 100
    '/'  shift, and go to state 101
    '%'  shift, and go to state 102

    $default  reduce using rule 60 (additive_expression)


State 130

   62 multiplicative_expression: multiplicative_expression '*' cast_expression .

    $default  reduce using rule 62 (multiplicative_expression)


State 131

   63 multiplicative_expression: multiplicative_expression '/' cast_expression .

    $default  reduce using rule 63 (multiplicative_expression)


State 132

   64 multiplicative_expression: multiplicative_expression '%' cast_expression .

    $default  reduce using rule 64 (multiplicative_expression)


State 133

   41 assignment_expression: unary_expression assignment_operator assignment_expression .

    $default  reduce using rule 41 (assignment_expression)


State 134

   73 postfix_expression: postfix_expression '(' ')' .

    $default  reduce using rule 73 (postfix_expression)


State 135

   81 argument_expression_list: assignment_expression .

    $default  reduce using rule 81 (argument_expression_list)


State 136

   74 postfix_expression: postfix_expression '(' argument_expression_list . ')'
   82 argument_expression_list: argument_expression_list . ',' assignment_expression

    ','  shift, and go to state 143
    ')'  shift, and go to state 144


State 137

  102 initializer_list: initializer_list ',' initializer .

    $default  reduce using rule 102 (initializer_list)


State 138

  115 identifier_list: identifier_list ',' IDENTIFIER . $@7

    $default  reduce using rule 114 ($@7)

    $@7  go to state 145


State 139

   15 parameters: parameters ',' type_specifier IDENTIFIER .

    $default  reduce using rule 15 (parameters)


State 140

    9 function_definition: IDENTIFIER $@2 parameter_list ARROW error_fun type_specifier $@3 . EOL compound_statement

    EOL  shift, and go to state 146


State 141

   66 cast_expression: '(' type_specifier ')' cast_expression .

    $default  reduce using rule 66 (cast_expression)


State 142

   39 expression: expression ',' assignment_expression .

    $default  reduce using rule 39 (expression)


State 143

   82 argument_expression_list: argument_expression_list ',' . assignment_expression

    IDENTIFIER      shift, and go to state 54
    STRING_LITERAL  shift, and go to state 55
    FRAC_CONST      shift, and go to state 56
    DOUBLE_CONST    shift, and go to state 57
    INT_CONST       shift, and go to state 58
    '+'             shift, and go to state 59
    '-'             shift, and go to state 60
    '!'             shift, and go to state 61
    '('             shift, and go to state 62

    assignment_expression      go to state 147
    conditional_expression     go to state 64
    logical_or_expression      go to state 65
    logical_and_expression     go to state 66
    equality_expression        go to state 67
    relational_expression      go to state 68
    additive_expression        go to state 69
    multiplicative_expression  go to state 70
    cast_expression            go to state 71
    unary_expression           go to state 72
    unary_operator             go to state 73
    postfix_expression         go to state 74
    primary_expression         go to state 75


State 144

   74 postfix_expression: postfix_expression '(' argument_expression_list ')' .

    $default  reduce using rule 74 (postfix_expression)


State 145

  115 identifier_list: identifier_list ',' IDENTIFIER $@7 .

    $default  reduce using rule 115 (identifier_list)


State 146

    9 function_definition: IDENTIFIER $@2 parameter_list ARROW error_fun type_specifier $@3 EOL . compound_statement

    FUN_ST  shift, and go to state 148

    compound_statement  go to state 149


State 147

   82 argument_expression_list: argument_expression_list ',' assignment_expression .

    $default  reduce using rule 82 (argument_expression_list)


State 148

   33 compound_statement: FUN_ST . FUN_EN
   34                   | FUN_ST . temp_fun statement_list FUN_EN

    FUN_EN  shift, and go to state 150

    $default  reduce using rule 35 (temp_fun)

    temp_fun  go to state 151


State 149

    9 function_definition: IDENTIFIER $@2 parameter_list ARROW error_fun type_specifier $@3 EOL compound_statement .

    $default  reduce using rule 9 (function_definition)


State 150

   33 compound_statement: FUN_ST FUN_EN .

    $default  reduce using rule 33 (compound_statement)


State 151

   34 compound_statement: FUN_ST temp_fun . statement_list FUN_EN

    IDENTIFIER      shift, and go to state 54
    STRING_LITERAL  shift, and go to state 55
    FRAC_CONST      shift, and go to state 56
    DOUBLE_CONST    shift, and go to state 57
    INT_CONST       shift, and go to state 58
    FUN_ST          shift, and go to state 148
    STRING          shift, and go to state 5
    INT             shift, and go to state 6
    LONG            shift, and go to state 7
    BOOL            shift, and go to state 8
    FRAC            shift, and go to state 9
    DOUBLE          shift, and go to state 10
    VOID            shift, and go to state 11
    EOL             shift, and go to state 152
    INPUT           shift, and go to state 153
    OUTPUT          shift, and go to state 154
    IF              shift, and go to state 155
    LOOP            shift, and go to state 156
    CONTINUE        shift, and go to state 157
    BREAK           shift, and go to state 158
    EXIT            shift, and go to state 159
    POINT           shift, and go to state 13
    LINE            shift, and go to state 14
    CONIC           shift, and go to state 15
    LINE_PAIR       shift, and go to state 16
    CIRCLE          shift, and go to state 17
    PARABOLA        shift, and go to state 18
    ELLIPSE         shift, and go to state 19
    HYPERBOLA       shift, and go to state 20
    '+'             shift, and go to state 59
    '-'             shift, and go to state 60
    '!'             shift, and go to state 61
    '('             shift, and go to state 62

    type_specifier             go to state 23
    in_out_specifier           go to state 160
    compound_statement         go to state 161
    expression_statement       go to state 162
    expression                 go to state 163
    assignment_expression      go to state 89
    conditional_expression     go to state 64
    logical_or_expression      go to state 65
    logical_and_expression     go to state 66
    equality_expression        go to state 67
    relational_expression      go to state 68
    additive_expression        go to state 69
    multiplicative_expression  go to state 70
    cast_expression            go to state 71
    unary_expression           go to state 72
    unary_operator             go to state 73
    postfix_expression         go to state 74
    primary_expression         go to state 75
    statement_list             go to state 164
    statement                  go to state 165
    declaration                go to state 166
    selection_statement        go to state 167
    iteration_statement        go to state 168
    jump_statement             go to state 169
    in_out_statement           go to state 170


State 152

   36 expression_statement: EOL .

    $default  reduce using rule 36 (expression_statement)


State 153

   31 in_out_specifier: INPUT .

    $default  reduce using rule 31 (in_out_specifier)


State 154

   32 in_out_specifier: OUTPUT .

    $default  reduce using rule 32 (in_out_specifier)


State 155

  117 selection_statement: IF . '(' expression ')' EOL compound_statement EOL ELSE EOL compound_statement
  118                    | IF . '(' expression ')' EOL compound_statement

    '('  shift, and go to state 171


State 156

  119 iteration_statement: LOOP . '(' expression ')' EOL compound_statement

    '('  shift, and go to state 172


State 157

  120 jump_statement: CONTINUE . EOL

    EOL  shift, and go to state 173


State 158

  121 jump_statement: BREAK . EOL

    EOL  shift, and go to state 174


State 159

  122 jump_statement: EXIT . exit

    EOL  shift, and go to state 175
    ':'  shift, and go to state 176

    exit  go to state 177


State 160

  126 in_out_statement: in_out_specifier . $@8 ':' initializer_list

    $default  reduce using rule 125 ($@8)

    $@8  go to state 178


State 161

   86 statement: compound_statement .

    $default  reduce using rule 86 (statement)


State 162

   87 statement: expression_statement .

    $default  reduce using rule 87 (statement)


State 163

   37 expression_statement: expression . EOL
   39 expression: expression . ',' assignment_expression

    EOL  shift, and go to state 179
    ','  shift, and go to state 118


State 164

   34 compound_statement: FUN_ST temp_fun statement_list . FUN_EN
   84 statement_list: statement_list . statement

    IDENTIFIER      shift, and go to state 54
    STRING_LITERAL  shift, and go to state 55
    FRAC_CONST      shift, and go to state 56
    DOUBLE_CONST    shift, and go to state 57
    INT_CONST       shift, and go to state 58
    FUN_ST          shift, and go to state 148
    FUN_EN          shift, and go to state 180
    STRING          shift, and go to state 5
    INT             shift, and go to state 6
    LONG            shift, and go to state 7
    BOOL            shift, and go to state 8
    FRAC            shift, and go to state 9
    DOUBLE          shift, and go to state 10
    VOID            shift, and go to state 11
    EOL             shift, and go to state 152
    INPUT           shift, and go to state 153
    OUTPUT          shift, and go to state 154
    IF              shift, and go to state 155
    LOOP            shift, and go to state 156
    CONTINUE        shift, and go to state 157
    BREAK           shift, and go to state 158
    EXIT            shift, and go to state 159
    POINT           shift, and go to state 13
    LINE            shift, and go to state 14
    CONIC           shift, and go to state 15
    LINE_PAIR       shift, and go to state 16
    CIRCLE          shift, and go to state 17
    PARABOLA        shift, and go to state 18
    ELLIPSE         shift, and go to state 19
    HYPERBOLA       shift, and go to state 20
    '+'             shift, and go to state 59
    '-'             shift, and go to state 60
    '!'             shift, and go to state 61
    '('             shift, and go to state 62

    type_specifier             go to state 23
    in_out_specifier           go to state 160
    compound_statement         go to state 161
    expression_statement       go to state 162
    expression                 go to state 163
    assignment_expression      go to state 89
    conditional_expression     go to state 64
    logical_or_expression      go to state 65
    logical_and_expression     go to state 66
    equality_expression        go to state 67
    relational_expression      go to state 68
    additive_expression        go to state 69
    multiplicative_expression  go to state 70
    cast_expression            go to state 71
    unary_expression           go to state 72
    unary_operator             go to state 73
    postfix_expression         go to state 74
    primary_expression         go to state 75
    statement                  go to state 181
    declaration                go to state 166
    selection_statement        go to state 167
    iteration_statement        go to state 168
    jump_statement             go to state 169
    in_out_statement           go to state 170


State 165

   83 statement_list: statement .

    $default  reduce using rule 83 (statement_list)


State 166

   85 statement: declaration .

    $default  reduce using rule 85 (statement)


State 167

   88 statement: selection_statement .

    $default  reduce using rule 88 (statement)


State 168

   89 statement: iteration_statement .

    $default  reduce using rule 89 (statement)


State 169

   90 statement: jump_statement .

    $default  reduce using rule 90 (statement)


State 170

   91 statement: in_out_statement .

    $default  reduce using rule 91 (statement)


State 171

  117 selection_statement: IF '(' . expression ')' EOL compound_statement EOL ELSE EOL compound_statement
  118                    | IF '(' . expression ')' EOL compound_statement

    IDENTIFIER      shift, and go to state 54
    STRING_LITERAL  shift, and go to state 55
    FRAC_CONST      shift, and go to state 56
    DOUBLE_CONST    shift, and go to state 57
    INT_CONST       shift, and go to state 58
    '+'             shift, and go to state 59
    '-'             shift, and go to state 60
    '!'             shift, and go to state 61
    '('             shift, and go to state 62

    expression                 go to state 182
    assignment_expression      go to state 89
    conditional_expression     go to state 64
    logical_or_expression      go to state 65
    logical_and_expression     go to state 66
    equality_expression        go to state 67
    relational_expression      go to state 68
    additive_expression        go to state 69
    multiplicative_expression  go to state 70
    cast_expression            go to state 71
    unary_expression           go to state 72
    unary_operator             go to state 73
    postfix_expression         go to state 74
    primary_expression         go to state 75


State 172

  119 iteration_statement: LOOP '(' . expression ')' EOL compound_statement

    IDENTIFIER      shift, and go to state 54
    STRING_LITERAL  shift, and go to state 55
    FRAC_CONST      shift, and go to state 56
    DOUBLE_CONST    shift, and go to state 57
    INT_CONST       shift, and go to state 58
    '+'             shift, and go to state 59
    '-'             shift, and go to state 60
    '!'             shift, and go to state 61
    '('             shift, and go to state 62

    expression                 go to state 183
    assignment_expression      go to state 89
    conditional_expression     go to state 64
    logical_or_expression      go to state 65
    logical_and_expression     go to state 66
    equality_expression        go to state 67
    relational_expression      go to state 68
    additive_expression        go to state 69
    multiplicative_expression  go to state 70
    cast_expression            go to state 71
    unary_expression           go to state 72
    unary_operator             go to state 73
    postfix_expression         go to state 74
    primary_expression         go to state 75


State 173

  120 jump_statement: CONTINUE EOL .

    $default  reduce using rule 120 (jump_statement)


State 174

  121 jump_statement: BREAK EOL .

    $default  reduce using rule 121 (jump_statement)


State 175

  123 exit: EOL .

    $default  reduce using rule 123 (exit)


State 176

  124 exit: ':' . expression EOL

    IDENTIFIER      shift, and go to state 54
    STRING_LITERAL  shift, and go to state 55
    FRAC_CONST      shift, and go to state 56
    DOUBLE_CONST    shift, and go to state 57
    INT_CONST       shift, and go to state 58
    '+'             shift, and go to state 59
    '-'             shift, and go to state 60
    '!'             shift, and go to state 61
    '('             shift, and go to state 62

    expression                 go to state 184
    assignment_expression      go to state 89
    conditional_expression     go to state 64
    logical_or_expression      go to state 65
    logical_and_expression     go to state 66
    equality_expression        go to state 67
    relational_expression      go to state 68
    additive_expression        go to state 69
    multiplicative_expression  go to state 70
    cast_expression            go to state 71
    unary_expression           go to state 72
    unary_operator             go to state 73
    postfix_expression         go to state 74
    primary_expression         go to state 75


State 177

  122 jump_statement: EXIT exit .

    $default  reduce using rule 122 (jump_statement)


State 178

  126 in_out_statement: in_out_specifier $@8 . ':' initializer_list

    ':'  shift, and go to state 185


State 179

   37 expression_statement: expression EOL .

    $default  reduce using rule 37 (expression_statement)


State 180

   34 compound_statement: FUN_ST temp_fun statement_list FUN_EN .

    $default  reduce using rule 34 (compound_statement)


State 181

   84 statement_list: statement_list statement .

    $default  reduce using rule 84 (statement_list)


State 182

   39 expression: expression . ',' assignment_expression
  117 selection_statement: IF '(' expression . ')' EOL compound_statement EOL ELSE EOL compound_statement
  118                    | IF '(' expression . ')' EOL compound_statement

    ','  shift, and go to state 118
    ')'  shift, and go to state 186


State 183

   39 expression: expression . ',' assignment_expression
  119 iteration_statement: LOOP '(' expression . ')' EOL compound_statement

    ','  shift, and go to state 118
    ')'  shift, and go to state 187


State 184

   39 expression: expression . ',' assignment_expression
  124 exit: ':' expression . EOL

    EOL  shift, and go to state 188
    ','  shift, and go to state 118


State 185

  126 in_out_statement: in_out_specifier $@8 ':' . initializer_list

    IDENTIFIER      shift, and go to state 54
    STRING_LITERAL  shift, and go to state 55
    FRAC_CONST      shift, and go to state 56
    DOUBLE_CONST    shift, and go to state 57
    INT_CONST       shift, and go to state 58
    '+'             shift, and go to state 59
    '-'             shift, and go to state 60
    '!'             shift, and go to state 61
    '('             shift, and go to state 62

    assignment_expression      go to state 63
    conditional_expression     go to state 64
    logical_or_expression      go to state 65
    logical_and_expression     go to state 66
    equality_expression        go to state 67
    relational_expression      go to state 68
    additive_expression        go to state 69
    multiplicative_expression  go to state 70
    cast_expression            go to state 71
    unary_expression           go to state 72
    unary_operator             go to state 73
    postfix_expression         go to state 74
    primary_expression         go to state 75
    initializer_list           go to state 189
    initializer                go to state 78


State 186

  117 selection_statement: IF '(' expression ')' . EOL compound_statement EOL ELSE EOL compound_statement
  118                    | IF '(' expression ')' . EOL compound_statement

    EOL  shift, and go to state 190


State 187

  119 iteration_statement: LOOP '(' expression ')' . EOL compound_statement

    EOL  shift, and go to state 191


State 188

  124 exit: ':' expression EOL .

    $default  reduce using rule 124 (exit)


State 189

  102 initializer_list: initializer_list . ',' initializer
  126 in_out_statement: in_out_specifier $@8 ':' initializer_list .

    ','  shift, and go to state 110

    $default  reduce using rule 126 (in_out_statement)


State 190

  117 selection_statement: IF '(' expression ')' EOL . compound_statement EOL ELSE EOL compound_statement
  118                    | IF '(' expression ')' EOL . compound_statement

    FUN_ST  shift, and go to state 148

    compound_statement  go to state 192


State 191

  119 iteration_statement: LOOP '(' expression ')' EOL . compound_statement

    FUN_ST  shift, and go to state 148

    compound_statement  go to state 193


State 192

  117 selection_statement: IF '(' expression ')' EOL compound_statement . EOL ELSE EOL compound_statement
  118                    | IF '(' expression ')' EOL compound_statement .

    EOL  shift, and go to state 194

    EOL       [reduce using rule 118 (selection_statement)]
    $default  reduce using rule 118 (selection_statement)


State 193

  119 iteration_statement: LOOP '(' expression ')' EOL compound_statement .

    $default  reduce using rule 119 (iteration_statement)


State 194

  117 selection_statement: IF '(' expression ')' EOL compound_statement EOL . ELSE EOL compound_statement

    ELSE  shift, and go to state 195


State 195

  117 selection_statement: IF '(' expression ')' EOL compound_statement EOL ELSE . EOL compound_statement

    EOL  shift, and go to state 196


State 196

  117 selection_statement: IF '(' expression ')' EOL compound_statement EOL ELSE EOL . compound_statement

    FUN_ST  shift, and go to state 148

    compound_statement  go to state 197


State 197

  117 selection_statement: IF '(' expression ')' EOL compound_statement EOL ELSE EOL compound_statement .

    $default  reduce using rule 117 (selection_statement)
